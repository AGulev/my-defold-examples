local TOUCH = hash("touch")
local POSITION = hash("position")
local OBJ = "."

local cached_pos = vmath.vector3()
local out_pos = vmath.vector3(-1000, -1000, 0)

function init(self)
    local gravity = physics.get_gravity()
    physics.set_gravity(vmath.vector3(0))
    
    local start_x = 450
    local start_y = 400
    local size_x = 12
    local size_y = 12

    local count_x = 39
    local count_y = 19
    local url = msg.url(nil, go.get_id(), "sprite")
    local pos = vmath.vector3()
    
    for i = count_y, 1, -1 do
        for k = count_x, 1, -1  do
            pos.x = size_x * k + start_x
            pos.y = start_y - size_y * i
            local id = factory.create("#factory", pos)
            url.path = id
            sprite.play_flipbook(url, tostring(math.random(1, 16)))
        end
    end
    url.fragment = "collisionobject"
    timer.delay(1, false, function()
        physics.set_gravity(gravity)
        physics.wakeup(url)
        self.start_scale = url
    end)
    
    msg.post(".", "acquire_input_focus")
end

local function return_out_pos()
    go.set(OBJ, POSITION, out_pos)
end

function on_input(self, action_id, action)
    if TOUCH == action_id and action.pressed then
        cached_pos.x = action.x
        cached_pos.y = action.y
        go.set(OBJ, POSITION, cached_pos)
        timer.delay(0.05, false, return_out_pos)
    end
end

function update(self)
    if self.start_scale then
        local box = physics.get_shape(self.start_scale, "Box")
        box.dimensions = box.dimensions + vmath.vector3(0.001,0.001,0)
        physics.set_shape(self.start_scale, "Box", box)
    end
end
